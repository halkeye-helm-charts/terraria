apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "terraria.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "terraria.name" . }}
    helm.sh/chart: {{ include "terraria.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "terraria.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        app.kubernetes.io/name: {{ include "terraria.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
        - name: init-myservice
          image: busybox:1.28
          command: ['sh']
          args:
            - -c
            - |
              cp /config/config.json /world/config.json
              chmod 777 /world/config.json
          volumeMounts:
          - name: terraria-worlds
            mountPath: /world
          - name: configmap
            mountPath: /config
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          tty: false
          stdin: false
          args:
            - "-killinactivesocket"
            {{- if .Values.terraria.worldfile }}
            - "-world"
            - {{ .Values.terraria.worldfile | quote }}
            {{- else }}
            - "-autocreate"
            - {{ include "terraria.worldsize" . | quote }}
            - "-world"
            - "/world/{{ .Values.terraria.worldsize }}-Normal-{{ include "terraria.worldsize" . }}.wld"
            {{- end }}
          ports:
            - name: server
              containerPort: 7777
              protocol: TCP
            - name: http
              containerPort: 7878
              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
          volumeMounts:
          - name: terraria-worlds
            mountPath: /world
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: configmap
        configMap:
          name: {{ template "terraria.fullname" . }}
      - name: terraria-worlds
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "terraria.fullname" . }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
